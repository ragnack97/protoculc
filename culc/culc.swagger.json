{
  "swagger": "2.0",
  "info": {
    "title": "culc.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Auth"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/allclient": {
      "get": {
        "operationId": "Auth_StreamServerStatuses",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/authStreamServerStatusesResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of authStreamServerStatusesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/culc": {
      "post": {
        "operationId": "Auth_Calculate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authCalculateRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authCalculateReq"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/history": {
      "get": {
        "operationId": "Auth_GetHistoryEx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authHistoryRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/login": {
      "post": {
        "operationId": "Auth_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLoginRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authLoginReq"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/newclient": {
      "post": {
        "operationId": "Auth_NewClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authClientRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authClientReq"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/register": {
      "post": {
        "operationId": "Auth_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRegisterRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authRegisterReq"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "definitions": {
    "authCalculateReq": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "authCalculateRes": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "authClientReq": {
      "type": "object",
      "properties": {
        "countworker": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "authClientRes": {
      "type": "object",
      "properties": {
        "res": {
          "type": "string"
        }
      }
    },
    "authExpression": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Идентификатор выражения"
        },
        "expres": {
          "type": "string",
          "title": "Идентификатор пользователя"
        }
      },
      "title": "Определение сообщения для выражения"
    },
    "authHistoryRes": {
      "type": "object",
      "properties": {
        "expressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/authExpression"
          },
          "title": "Список выражений"
        }
      },
      "title": "Определение сообщения для ответа с историей выражений"
    },
    "authLoginReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "authLoginRes": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "authRegisterReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "authRegisterRes": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "authServerStatus": {
      "type": "object",
      "properties": {
        "serverId": {
          "type": "string"
        },
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "all": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "authStreamServerStatusesResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/authServerStatus"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
